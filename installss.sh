#!/bin/bash

# --- –ù–ê–ß–ê–õ–û –°–ö–†–ò–ü–¢–ê ---

echo "–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Shadowsocks-rust..."
echo "------------------------------------------------------------"

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
SS_PORT=4232
SS_METHOD="chacha20-ietf-poly1305"
CONFIG_FILE="/etc/shadowsocks-rust/config.json"
BINARY_PATH="/usr/local/bin/ssserver"

# --- –§—É–Ω–∫—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —è–¥—Ä–∞ (sysctl) ---
optimize_sysctl() {
    echo
    echo "--- –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —è–¥—Ä–∞ ---"

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∂–µ–ª–∞–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —è–¥—Ä–∞
    read -r -d '' DESIRED_SETTINGS << EOM
fs.file-max = 51200
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.core.netdev_max_backlog = 250000
net.core.somaxconn = 4096
net.core.default_qdisc = fq
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 0
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.ip_local_port_range = 10000 65000
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 65536
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_mem = 25600 51200 102400
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_congestion_control = bbr
EOM

    MISMATCHED_SETTINGS=()
    echo "üîé –ü—Ä–æ–≤–µ—Ä—è—é —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–µ—Ç–∏..."

    while IFS= read -r line; do
        if [[ -z "$line" ]]; then continue; fi

        param=$(echo "$line" | cut -d'=' -f1 | xargs)
        desired_value=$(echo "$line" | cut -d'=' -f2- | xargs)
        current_value=$(sysctl -n "$param" 2>/dev/null)
        
        current_value_normalized=$(echo "$current_value" | tr -s '[:space:]' ' ')
        desired_value_normalized=$(echo "$desired_value" | tr -s '[:space:]' ' ')

        if [ "$current_value_normalized" != "$desired_value_normalized" ]; then
            display_current=${current_value:-"[–ù–ï –ó–ê–î–ê–ù]"}
            MISMATCHED_SETTINGS+=("$param|$display_current|$desired_value")
        fi
    done <<< "$DESIRED_SETTINGS"

    if [ ${#MISMATCHED_SETTINGS[@]} -gt 0 ]; then
        echo -e "\n‚ùóÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
        printf "%-40s | %-30s | %-30s\n" "–ü–∞—Ä–∞–º–µ—Ç—Ä" "–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ" "–ñ–µ–ª–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"
        printf '%.s‚îÄ' {1..105} && echo ""

        for item in "${MISMATCHED_SETTINGS[@]}"; do
            param=$(echo "$item" | cut -d'|' -f1)
            current=$(echo "$item" | cut -d'|' -f2)
            desired=$(echo "$item" | cut -d'|' -f3)
            printf "%-40s | %-30s | %-30s\n" "$param" "$current" "$desired"
        done

        echo ""
        read -p "–ü—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ç–∏ —Å–µ—Ç–µ–≤—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏? (y/n): " answer
        case $answer in
            [Yy]* )
                echo -e "\n‚öôÔ∏è  –ü—Ä–∏–º–µ–Ω—è—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."
                for item in "${MISMATCHED_SETTINGS[@]}"; do
                    param=$(echo "$item" | cut -d'|' -f1)
                    desired=$(echo "$item" | cut -d'|' -f3)
                    # –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –æ—Ç root, –ø–æ—ç—Ç–æ–º—É sudo –Ω–µ –Ω—É–∂–µ–Ω
                    if sysctl -w "$param=$desired"; then
                        echo "  ‚úÖ –£—Å–ø–µ—à–Ω–æ: $param"
                    else
                        echo "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ: $param"
                    fi
                done
                echo -e "‚ú® –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —è–¥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
                ;;
            * )
                echo -e "\n‚ùå –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."
                ;;
        esac
    else
        echo -e "\n‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —è–¥—Ä–∞ —É–∂–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã."
    fi
}

# --- –®–∞–≥ 1: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ ---
echo
echo "--- –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã ---"
if [ -f "${BINARY_PATH}" ]; then
    echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
else
    echo "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Shadowsocks-rust..."
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ
export DEBIAN_FRONTEND=noninteractive
apt-get update -qq >/dev/null
apt-get install -y -qq curl xz-utils >/dev/null

# --- –®–∞–≥ 2: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ ---
echo
echo "--- –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ Shadowsocks-rust ---"
LATEST_VERSION=$(curl -s "https://api.github.com/repos/shadowsocks/shadowsocks-rust/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
DOWNLOAD_URL="https://github.com/shadowsocks/shadowsocks-rust/releases/download/${LATEST_VERSION}/shadowsocks-${LATEST_VERSION}.x86_64-unknown-linux-gnu.tar.xz"

echo "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏: ${LATEST_VERSION}..."
curl -L -f -o /tmp/shadowsocks.tar.xz ${DOWNLOAD_URL}
tar -xf /tmp/shadowsocks.tar.xz -C /usr/local/bin/ ssserver
rm /tmp/shadowsocks.tar.xz

# --- –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ---
echo
echo "--- –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ---"
if [ -f "${CONFIG_FILE}" ]; then
    echo "–ù–∞–π–¥–µ–Ω —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ñ–∏–≥. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å..."
else
    echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
fi

mkdir -p /etc/shadowsocks-rust
SS_PASSWORD=$(head -c 32 /dev/urandom | base64) # –í—Å–µ–≥–¥–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
cat > ${CONFIG_FILE} <<EOT
{
    "server": "0.0.0.0",
    "server_port": ${SS_PORT},
    "password": "${SS_PASSWORD}",
    "method": "${SS_METHOD}"
}
EOT

# --- –í–´–ü–û–õ–ù–ï–ù–ò–ï –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò ---
optimize_sysctl

# --- –®–∞–≥ 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ ---
echo
echo "--- –®–∞–≥ 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –∏ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞ ---"
SERVICE_FILE="/etc/systemd/system/shadowsocks-server.service"
cat > ${SERVICE_FILE} <<EOT
[Unit]
Description=Shadowsocks-rust Server Service
After=network.target
[Service]
Type=simple
User=root
ExecStart=${BINARY_PATH} -c ${CONFIG_FILE}
Restart=on-failure
RestartSec=5s
[Install]
WantedBy=multi-user.target
EOT

if command -v ufw &> /dev/null; then ufw allow ${SS_PORT}/tcp >/dev/null; ufw allow ${SS_PORT}/udp >/dev/null; ufw reload >/dev/null; fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
systemctl daemon-reload
systemctl enable shadowsocks-server >/dev/null 2>&1
systemctl restart shadowsocks-server
sleep 1

# --- –®–∞–≥ 6: –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ---
echo
echo "=================================================="
echo "–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo
echo "–î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (—Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º):"
echo "  –°–µ—Ä–≤–µ—Ä (IP):      $(curl -s -4 ifconfig.me)"
echo "  –ü–æ—Ä—Ç:             ${SS_PORT}"
echo "  –ú–µ—Ç–æ–¥ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ${SS_METHOD}"
echo "  –ü–∞—Ä–æ–ª—å:           ${SS_PASSWORD}"
echo
echo "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
systemctl status shadowsocks-server --no-pager
echo "=================================================="
